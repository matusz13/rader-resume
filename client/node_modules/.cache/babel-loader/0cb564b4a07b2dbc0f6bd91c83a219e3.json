{"ast":null,"code":"import _slicedToArray from\"/Users/13triine/Documents/rader-resume/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer,useRef}from'react';import{GeoTweetMap}from'./GeoTweetMap';import{GeoTweetList}from'./GeoTweetList';import update from'immutability-helper';export var StateContext=React.createContext();var ref=null;var initialState={lat:'',lng:'',hashtag:'',weight:''};function stateReducer(state,action){switch(action.type){case'UPDATE_LOCATION':{ref.current.updateHookBack(action.data.hashtag,action.data.lat,action.data.lng);return update(state,{lat:{$set:action.data.lat},lng:{$set:action.data.lng},hashtag:{$set:action.data.hashtag},weight:{$set:action.data.hashtag}});}case'UPDATE_LIST':{return update(state,{lat:{$set:action.data.lat},lng:{$set:action.data.lng},weight:{$set:action.data.weight}});}default:{return initialState;}}}export var GeoTweetScreen=function GeoTweetScreen(){ref=useRef(null);var _useReducer=useReducer(stateReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return React.createElement(StateContext.Provider,{value:{state:state,dispatch:dispatch}},React.createElement(\"div\",{style:{height:'100vh'}},React.createElement(\"div\",{style:{position:'absolute',left:'38%',top:0,width:'62%',height:'100vh'}},React.createElement(GeoTweetMap,null)),React.createElement(\"div\",{style:{position:'absolute',left:'0',top:0,width:'38%',height:'100vh'}},React.createElement(GeoTweetList,{ref:ref}))));};","map":{"version":3,"sources":["/Users/13triine/Documents/rader-resume/client/src/components/GeoTweet/GeoTweetScreen.jsx"],"names":["React","useReducer","useRef","GeoTweetMap","GeoTweetList","update","StateContext","createContext","ref","initialState","lat","lng","hashtag","weight","stateReducer","state","action","type","current","updateHookBack","data","$set","GeoTweetScreen","dispatch","height","position","left","top","width"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAkBC,UAAlB,CAA8BC,MAA9B,KAA6C,OAA7C,CACA,OAAQC,WAAR,KAA0B,eAA1B,CACA,OAAQC,YAAR,KAA2B,gBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAIA,MAAO,IAAMC,CAAAA,YAAY,CAAGN,KAAK,CAACO,aAAN,EAArB,CACP,GAAIC,CAAAA,GAAG,CAAG,IAAV,CAEA,GAAIC,CAAAA,YAAY,CAAG,CACfC,GAAG,CAAE,EADU,CAEfC,GAAG,CAAE,EAFU,CAGfC,OAAO,CAAE,EAHM,CAIfC,MAAM,CAAE,EAJO,CAAnB,CAOA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6BC,MAA7B,CAAqC,CAE7B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,iBAAL,CAAuB,CAChBT,GAAG,CAACU,OAAJ,CAAYC,cAAZ,CAA2BH,MAAM,CAACI,IAAP,CAAYR,OAAvC,CAA+CI,MAAM,CAACI,IAAP,CAAYV,GAA3D,CAA+DM,MAAM,CAACI,IAAP,CAAYT,GAA3E,EACH,MAAON,CAAAA,MAAM,CAACU,KAAD,CAAQ,CAAEL,GAAG,CAAE,CAACW,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYV,GAAnB,CAAP,CAA+BC,GAAG,CAAE,CAACU,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYT,GAAnB,CAApC,CAA4DC,OAAO,CAAE,CAACS,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYR,OAAnB,CAArE,CAAkGC,MAAM,CAAE,CAACQ,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYR,OAAnB,CAA1G,CAAR,CAAb,CACH,CACA,IAAK,aAAL,CAAmB,CAChB,MAAOP,CAAAA,MAAM,CAACU,KAAD,CAAQ,CAAEL,GAAG,CAAE,CAACW,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYV,GAAnB,CAAP,CAA+BC,GAAG,CAAE,CAACU,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYT,GAAnB,CAApC,CAA6DE,MAAM,CAAE,CAACQ,IAAI,CAAEL,MAAM,CAACI,IAAP,CAAYP,MAAnB,CAArE,CAAR,CAAb,CACE,CACN,QAAQ,CACJ,MAAOJ,CAAAA,YAAP,CACH,CAVL,CAaH,CAEL,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACnCd,GAAG,CAAGN,MAAM,CAAC,IAAD,CAAZ,CADmC,gBAGRD,UAAU,CAACa,YAAD,CAAeL,YAAf,CAHF,4CAG3BM,KAH2B,iBAGpBQ,QAHoB,iBAMhC,MACI,qBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAER,KAAK,CAALA,KAAF,CAASQ,QAAQ,CAARA,QAAT,CAA9B,EACA,2BAAK,KAAK,CAAE,CAACC,MAAM,CAAE,OAAT,CAAZ,EACC,2BAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,UAAX,CAAuBC,IAAI,CAAE,KAA7B,CAAoCC,GAAG,CAAE,CAAzC,CAA4CC,KAAK,CAAE,KAAnD,CAA0DJ,MAAM,CAAE,OAAlE,CAAZ,EACG,oBAAC,WAAD,MADH,CADD,CAII,2BAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,UAAX,CAAuBC,IAAI,CAAE,GAA7B,CAAkCC,GAAG,CAAE,CAAvC,CAA0CC,KAAK,CAAE,KAAjD,CAAwDJ,MAAM,CAAE,OAAhE,CAAZ,EACA,oBAAC,YAAD,EAAc,GAAG,CAAEhB,GAAnB,EADA,CAJJ,CADA,CADJ,CAeH,CArBM","sourcesContent":["import React, {   useReducer, useRef }  from 'react';\nimport {GeoTweetMap} from './GeoTweetMap';\nimport {GeoTweetList} from './GeoTweetList';\nimport update from 'immutability-helper';\n\n\n\nexport const StateContext = React.createContext();\nlet ref = null;\n\nlet initialState = {\n    lat: '',\n    lng: '',\n    hashtag: '',\n    weight: ''\n  }\n\nfunction stateReducer(state, action) {\n\n        switch (action.type) {\n            case 'UPDATE_LOCATION':{\n                   ref.current.updateHookBack(action.data.hashtag,action.data.lat,action.data.lng);\n                return update(state, { lat: {$set: action.data.lat},lng: {$set: action.data.lng},hashtag: {$set: action.data.hashtag}, weight: {$set: action.data.hashtag}})\n            } \n             case 'UPDATE_LIST':{                \n                return update(state, { lat: {$set: action.data.lat},lng: {$set: action.data.lng}, weight: {$set: action.data.weight}})\n                 }\n            default:{\n                return initialState;\n            }\n                \n        }\n    }\n\nexport const GeoTweetScreen = () => {\n ref = useRef(null);\n\n  const [state, dispatch] = useReducer(stateReducer, initialState);\n    \n\n    return (\n        <StateContext.Provider value={{ state, dispatch }}>\n        <div style={{height: '100vh'}}>\n         <div style={{position: 'absolute', left: '38%', top: 0, width: '62%', height: '100vh'}}>\n            <GeoTweetMap />\n        </div>\n            <div style={{position: 'absolute', left: '0', top: 0, width: '38%', height: '100vh'}}>\n            <GeoTweetList ref={ref} />\n        </div>\n            \n    </div>\n  </StateContext.Provider>\n          \n    );\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}