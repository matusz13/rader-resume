{"ast":null,"code":"import _slicedToArray from\"/Users/13triine/Documents/rader-resume/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext,forwardRef,useImperativeHandle}from'react';import{makeStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import Divider from'@material-ui/core/Divider';import ListItemText from'@material-ui/core/ListItemText';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import Avatar from'@material-ui/core/Avatar';import Paper from'@material-ui/core/Paper';import Typography from'@material-ui/core/Typography';import FilledInput from'@material-ui/core/FilledInput';import InputAdornment from'@material-ui/core/InputAdornment';import FormControl from'@material-ui/core/FormControl';import clsx from'clsx';import axios from'axios';import useDebounce from'../utils/useDebounce';import{StateContext}from'./GeoTweetScreen';var useStyles=makeStyles(function(theme){return{root:{width:'100%',backgroundColor:theme.palette.background.paper},filledbg:{width:'100%',height:'100%',backgroundColor:'#e8e8e8'},inline:{display:'inline'},hashtaginp:{textAlign:'center',width:'100%'},screenname:{position:'absolute',top:'-10px',width:'100%'},divider:{position:'absolute',left:'-71px',width:'100%'}};});export var GeoTweetList=forwardRef(function(props,ref){var _useContext=useContext(StateContext),state=_useContext.state,dispatch=_useContext.dispatch;var _useState=useState({tweets:[]}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var classes=useStyles();var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];var debouncedSearchTerm=useDebounce(searchTerm,500);var handleChange=function handleChange(prop){return function(event){dispatch({type:'UPDATE_LIST',data:{weight:event.target.value}});setSearchTerm(event.target.value);};};function callGeoTweetService(searchterm){if(debouncedSearchTerm){var config={method:'POST',url:'/api/geotweet',timeout:1000*5,headers:{'Content-Type':'application/json','Accept':'application/json'},data:JSON.stringify({hashtag:searchterm,lng:state.lng,lat:state.lat})};axios(config).then(function(response){// handle result\nvar body=response.data;//console.log(\"response body: \" +body)\nif(body.error=='invalid URL'){setData({error:'invalid url, please try again'});}else if(body.error=='Address not found'){setData({error:'Could not verify url, please try again'});}else{var tweets=[];for(var tweet in body){//console.log(\"tweet: \" + body[tweet].text);\ntweets.push({text:body[tweet].text,entities:body[tweet].entities,user:body[tweet].user,avatarUrl:\"https://twitter.com/\"+body[tweet].user.screen_name+\"/profile_image?size=mini\"});}//console.log(\"setting tweet data\");\nsetData({tweets:tweets});}}).catch(function(e){// handle errors and timeout error\nsetData({error:'there was an error, please try again'});});}}var updateHookBack=function updateHookBack(hashtag,lat,lng){dispatch({type:'UPDATE_LIST',data:{lat:lat,lng:lng,weight:hashtag}});setSearchTerm(hashtag);//callGeoTweetService(hashtag);\n};useImperativeHandle(ref,function(){return{updateHookBack:updateHookBack};});useEffect(function(){callGeoTweetService(debouncedSearchTerm);},[debouncedSearchTerm]);return React.createElement(\"div\",{className:classes.filledbg},React.createElement(\"div\",null,React.createElement(\"div\",{className:classes.hashtaginp},React.createElement(\"form\",{className:classes.root,noValidate:true,autoComplete:\"off\"},React.createElement(FormControl,{className:clsx(classes.hashtaginp),variant:\"filled\"},React.createElement(FilledInput,{id:\"filled-adornment-weight\",value:state.weight,onChange:handleChange('weight'),startAdornment:React.createElement(InputAdornment,{position:\"start\"},\"#\"),\"aria-describedby\":\"filled-weight-helper-text\",inputProps:{'aria-label':'weight'}}))))),React.createElement(\"div\",null,React.createElement(Paper,{style:{maxHeight:'92vh',overflow:'auto'}},React.createElement(List,{className:classes.root},data.tweets.map(function(tweet){return React.createElement(\"div\",null,React.createElement(ListItem,{alignItems:\"flex-start\"},React.createElement(ListItemAvatar,null,React.createElement(Avatar,{alt:tweet.user.screen_name,src:tweet.user.profile_image_url})),React.createElement(ListItemText,{primary:React.createElement(React.Fragment,null,React.createElement(Typography,{component:\"span\",variant:\"body2\",className:classes.inline,color:\"textPrimary\"}),React.createElement(\"div\",{className:classes.screenname},React.createElement(\"br\",null),\"@\"+tweet.user.screen_name,\" \")),secondary:React.createElement(React.Fragment,null,React.createElement(Typography,{component:\"span\",variant:\"body2\",className:classes.inline,color:\"textPrimary\"}),React.createElement(\"div\",null,React.createElement(\"br\",null),\" \",tweet.text,\" \"))})),React.createElement(Divider,{className:classes.divider,variant:\"inset\",component:\"li\"}));})))));});","map":{"version":3,"sources":["/Users/13triine/Documents/rader-resume/client/src/components/GeoTweet/GeoTweetList.jsx"],"names":["React","useState","useEffect","useContext","forwardRef","useImperativeHandle","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Paper","Typography","FilledInput","InputAdornment","FormControl","clsx","axios","useDebounce","StateContext","useStyles","theme","root","width","backgroundColor","palette","background","paper","filledbg","height","inline","display","hashtaginp","textAlign","screenname","position","top","divider","left","GeoTweetList","props","ref","state","dispatch","tweets","data","setData","classes","searchTerm","setSearchTerm","debouncedSearchTerm","handleChange","prop","event","type","weight","target","value","callGeoTweetService","searchterm","config","method","url","timeout","headers","JSON","stringify","hashtag","lng","lat","then","response","body","error","tweet","push","text","entities","user","avatarUrl","screen_name","catch","e","updateHookBack","maxHeight","overflow","map","profile_image_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext , forwardRef, useImperativeHandle} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\n\nimport Typography from '@material-ui/core/Typography';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport useDebounce from '../utils/useDebounce';\nimport { StateContext } from './GeoTweetScreen';\n\n const useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  filledbg: {\n    width: '100%',\n    height:'100%',\n    backgroundColor: '#e8e8e8',\n  },\n  inline: {\n    display: 'inline',\n  },\n  hashtaginp: {\n    textAlign:'center',\n    width: '100%',\n    \n  },\nscreenname: {\n    position:'absolute',\n    top:'-10px',\n    width: '100%',\n    \n  },\ndivider: {\n    position:'absolute',\n    left:'-71px',\n    width: '100%',\n    \n  },\n\n}));\n\n\n\nexport const GeoTweetList = forwardRef((props, ref) => {\n    const {state, dispatch} = useContext(StateContext);\n    \n    const [data, setData] = useState({ tweets: [] });\n    const classes = useStyles(); \n\n  \n    const [searchTerm, setSearchTerm] = useState('');\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n     const handleChange = prop => event => {\n         dispatch({ type: 'UPDATE_LIST', data: {\n                   weight: event.target.value,\n                   \n              },})\n        setSearchTerm(event.target.value);\n      };\n    \n    \n    function callGeoTweetService(searchterm){\n            if (debouncedSearchTerm) {\n        const config = {\n        method: 'POST',\n        url: '/api/geotweet',\n        timeout: 1000 * 5,\n        headers: {'Content-Type':'application/json',\n                 'Accept':'application/json'\n                 },\n        data: JSON.stringify({hashtag:searchterm,lng:state.lng,lat:state.lat})\n        }\n        axios(config)\n    .then(response => {\n            // handle result\n            const body =  response.data;\n            //console.log(\"response body: \" +body)\n            if(body.error == 'invalid URL'){\n                setData({\n                    error:'invalid url, please try again'});\n            }\n            else if(body.error == 'Address not found'){\n                setData({\n                    error:'Could not verify url, please try again'});\n             }\n            else {\n                let tweets = [];\n                for (let tweet in body){\n                    //console.log(\"tweet: \" + body[tweet].text);\n                    tweets.push({\n                        text: body[tweet].text,\n                        entities: body[tweet].entities,\n                        user: body[tweet].user,\n                        avatarUrl: \"https://twitter.com/\"+body[tweet].user.screen_name+\"/profile_image?size=mini\"})\n                }\n                //console.log(\"setting tweet data\");\n                setData({tweets:tweets});\n            }\n        })\n        .catch((e) => {\n            // handle errors and timeout error\n            setData({\n                    error:'there was an error, please try again'\n                });\n        })\n      }\n    }\n     \n    const updateHookBack = (hashtag, lat, lng) => {\n        dispatch({ type: 'UPDATE_LIST', data: {\n            lat: lat,\n            lng: lng,\n                   weight: hashtag\n                   \n              },})\n        \n        setSearchTerm(hashtag);\n        //callGeoTweetService(hashtag);\n    }\n    useImperativeHandle(ref,() =>{\n        return {\n            updateHookBack:updateHookBack\n        };\n    });\n    \n     useEffect( () => {\n    callGeoTweetService(debouncedSearchTerm);\n  }, [debouncedSearchTerm]);\n    \n\n    return (\n        <div className={classes.filledbg}>\n            <div ><div className={classes.hashtaginp}><form className={classes.root} noValidate autoComplete=\"off\">\n                <FormControl className={clsx( classes.hashtaginp)} variant=\"filled\">\n                  <FilledInput\n                    id=\"filled-adornment-weight\"\n                    value={state.weight}\n                    onChange={handleChange('weight')}\n                    \n                    startAdornment={<InputAdornment position=\"start\">#</InputAdornment>}\n                    aria-describedby=\"filled-weight-helper-text\"\n                    inputProps={{\n                      'aria-label': 'weight',\n                    }}\n                  />\n                </FormControl>\n\n                </form></div></div>\n            <div >\n    <Paper style={{maxHeight: '92vh', overflow: 'auto'}}>\n\n       <List className={classes.root}>\n          {data.tweets.map(tweet =><div>\n      <ListItem  alignItems=\"flex-start\">\n        <ListItemAvatar>\n        \n          <Avatar alt={tweet.user.screen_name}  src={tweet.user.profile_image_url} />\n        </ListItemAvatar>\n          <ListItemText primary={<React.Fragment><Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n               \n              </Typography>\n               <div className={classes.screenname}><br/>{\"@\"+tweet.user.screen_name} </div>\n            </React.Fragment>}\n              secondary={<React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n               \n              </Typography>\n              <div ><br/> {tweet.text} </div>\n            </React.Fragment>}\n              />\n        \n     \n      </ListItem>\n    <Divider className={classes.divider} variant=\"inset\" component=\"li\" /></div>)}\n      \n        </List></Paper></div></div>\n    );\n  \n})\n\n"]},"metadata":{},"sourceType":"module"}